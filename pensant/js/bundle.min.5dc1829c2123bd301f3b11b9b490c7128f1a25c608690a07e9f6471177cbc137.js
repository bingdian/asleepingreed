(function(){"use strict";function e(){var t=document.getElementById("menuToggle"),o=document.getElementById("menuClose"),n=document.getElementById("mobileDrawer"),e=document.getElementById("drawerOverlay");if(!t||!n){console.warn("Mobile navigation elements not found");return}function i(){n.style.transform="translateX(0)",e.style.opacity="1",e.style.pointerEvents="auto",document.documentElement.style.overflow="hidden",t.setAttribute("aria-expanded","true")}function s(){n.style.transform="translateX(100%)",e.style.opacity="0",e.style.pointerEvents="none",document.documentElement.style.overflow="",t.setAttribute("aria-expanded","false")}t.addEventListener("click",i),e.addEventListener("click",s),o&&o.addEventListener("click",s),document.addEventListener("keydown",function(e){e.key==="Escape"&&s()}),console.log("Mobile navigation initialized")}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",e):e()})();class Lightbox{constructor(){this.images=[],this.currentIndex=0,this.isOpen=!1,this.lightboxEl=null,this.imageEl=null,this.loaderEl=null,this.prevBtn=null,this.nextBtn=null,this.closeBtn=null,this.init()}init(){this.createLightboxHTML(),this.bindEvents(),this.scanImages()}createLightboxHTML(){this.lightboxEl=document.createElement("div"),this.lightboxEl.className="lightbox-overlay",this.lightboxEl.innerHTML=`
      <div class="lightbox-container">
        <button class="lightbox-close" aria-label="Close lightbox">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
        
        <div class="lightbox-content">
          <div class="lightbox-image-container">
            <div class="lightbox-loader">
              <div class="loader-spinner"></div>
            </div>
            <img class="lightbox-image" alt="" />
          </div>
          
          <button class="lightbox-nav lightbox-prev" aria-label="Previous image">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15,18 9,12 15,6"></polyline>
            </svg>
          </button>
          
          <button class="lightbox-nav lightbox-next" aria-label="Next image">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="9,18 15,12 9,6"></polyline>
            </svg>
          </button>
        </div>
      </div>
    `,document.body.appendChild(this.lightboxEl),this.imageEl=this.lightboxEl.querySelector(".lightbox-image"),this.loaderEl=this.lightboxEl.querySelector(".lightbox-loader"),this.prevBtn=this.lightboxEl.querySelector(".lightbox-prev"),this.nextBtn=this.lightboxEl.querySelector(".lightbox-next"),this.closeBtn=this.lightboxEl.querySelector(".lightbox-close")}bindEvents(){this.closeBtn.addEventListener("click",()=>this.close()),this.lightboxEl.addEventListener("click",e=>{(e.target===this.lightboxEl||e.target.closest(".lightbox-container")===null)&&this.close()}),this.prevBtn.addEventListener("click",e=>{e.stopPropagation(),this.prev()}),this.nextBtn.addEventListener("click",e=>{e.stopPropagation(),this.next()});const e=this.lightboxEl.querySelector(".lightbox-content");e.addEventListener("click",t=>{const s=t.target===e||t.target.closest(".lightbox-image-container")===t.target.closest(".lightbox-image-container");if(!s||t.target===this.imageEl)return;t.stopPropagation();const n=e.getBoundingClientRect(),o=t.clientX-n.left,i=n.width/2;o<i?this.prev():this.next()}),document.addEventListener("keydown",e=>{if(!this.isOpen)return;switch(e.key){case"Escape":this.close();break;case"ArrowLeft":e.preventDefault(),this.prev();break;case"ArrowRight":e.preventDefault(),this.next();break}});let t=0,n=0,s=0,o=0;this.lightboxEl.addEventListener("touchstart",e=>{t=e.changedTouches[0].screenX,s=e.changedTouches[0].screenY},{passive:!0}),this.lightboxEl.addEventListener("touchend",e=>{n=e.changedTouches[0].screenX,o=e.changedTouches[0].screenY,this.handleSwipe(t,n,s,o)},{passive:!0}),this.imageEl.addEventListener("load",()=>{this.hideLoader()}),this.imageEl.addEventListener("error",()=>{this.hideLoader(),console.error("Failed to load image")})}handleSwipe(e,t,n,s){const i=50,o=e-t,a=Math.abs(n-s);Math.abs(o)>i&&a<100&&(o>0?this.next():this.prev())}scanImages(){const e=document.querySelectorAll("article img, .article-container img, .nested-copy-line-height img");e.forEach((e,t)=>{const n=()=>{const t=e.getBoundingClientRect();return t.width<150||t.height<150};if(e.complete){if(n())return}else{e.addEventListener("load",()=>{if(n())return;this.addImageToLightbox(e,this.images.length)});return}this.addImageToLightbox(e,t)})}addImageToLightbox(e,t){e.style.cursor="pointer",e.addEventListener("click",n=>{n.preventDefault(),this.openWithImage(e,t)}),this.images.push({src:e.src,alt:e.alt||e.title||"",caption:e.title||e.alt||"",element:e})}openWithImage(e){const n=this.images.findIndex(t=>t.element===e);this.currentIndex=n!==-1?n:0,this.open()}open(){this.isOpen=!0,this.lightboxEl.classList.add("lightbox-active"),document.body.style.overflow="hidden",document.body.classList.add("lightbox-open"),this.lightboxEl.setAttribute("data-single-image",this.images.length<=1?"true":"false"),this.loadCurrentImage(),this.updateNavigation(),this.closeBtn.focus()}close(){this.isOpen=!1,this.lightboxEl.classList.remove("lightbox-active"),document.body.style.overflow="",document.body.classList.remove("lightbox-open"),this.images[this.currentIndex]&&this.images[this.currentIndex].element&&this.images[this.currentIndex].element.focus()}prev(){if(this.images.length<=1)return;this.currentIndex=this.currentIndex>0?this.currentIndex-1:this.images.length-1,this.loadCurrentImage(),this.updateNavigation()}next(){if(this.images.length<=1)return;this.currentIndex=this.currentIndex<this.images.length-1?this.currentIndex+1:0,this.loadCurrentImage(),this.updateNavigation()}loadCurrentImage(){if(!this.images[this.currentIndex])return;this.showLoader();const e=this.images[this.currentIndex],t=new Image;t.onload=()=>{this.imageEl.src=e.src,this.imageEl.alt=e.alt},t.onerror=()=>{this.hideLoader(),console.error("Failed to load image:",e.src)},t.src=e.src}showLoader(){this.loaderEl.style.display="flex",this.imageEl.style.opacity="0"}hideLoader(){this.loaderEl.style.display="none",this.imageEl.style.opacity="1"}updateNavigation(){this.images.length<=1?(this.prevBtn.style.display="none",this.nextBtn.style.display="none"):(this.prevBtn.style.display="flex",this.nextBtn.style.display="flex")}}document.addEventListener("DOMContentLoaded",()=>{new Lightbox}),typeof module!="undefined"&&module.exports&&(module.exports=Lightbox),document.addEventListener("DOMContentLoaded",function(){let t=!1;function e(){const e=document.querySelector(".gallery-grid"),n=document.querySelectorAll(".gallery-item");if(!e||n.length===0)return;if(window.innerWidth<=480){e.style.height="auto",n.forEach(e=>{e.style.position="relative",e.style.left="0",e.style.top="0",e.style.width="100%"});return}requestAnimationFrame(()=>{const c=e.offsetWidth,s=32,a=Math.floor((c-s)/2),r=[0,0];n.forEach(e=>{e.style.width=`${a}px`}),n.forEach((e,t)=>{o(e,r,s,a,t)}),i(e,r),t=!0})}function o(e,t,n,s){const i=t.indexOf(Math.min(...t)),a=t[i];e.style.transition="none";const r=i*(s+n);e.style.left=`${r}px`,e.style.top=`${a}px`,t[i]+=e.offsetHeight+n}function i(e,t){const n=Math.max(...t);e.style.transition="none",e.style.height=`${n}px`}function n(t,n){t.classList.add("loaded"),n.classList.add("loaded"),setTimeout(()=>{e()},100)}function a(){const e=document.querySelectorAll(".gallery-item");e.forEach((e,t)=>{const o=e.querySelector(".gallery-image-wrapper"),s=e.querySelector(".gallery-image");if(s&&o){const e=[250,300,200,350,280,220,320,240],i=e[t%e.length];o.style.minHeight=`${i}px`,s.complete&&s.naturalHeight>0?n(s,o):s.addEventListener("load",()=>{n(s,o)})}})}setTimeout(()=>{a(),e(),setTimeout(()=>{e()},3e3)},100);let s;window.addEventListener("resize",()=>{clearTimeout(s),s=setTimeout(()=>{t=!1,e()},150)})})